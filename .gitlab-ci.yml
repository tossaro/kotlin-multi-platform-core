image: openjdk:11-jdk

variables:
  ANDROID_COMPILE_SDK: "32"
  ANDROID_BUILD_TOOLS: "32.0.0"
  ANDROID_SDK_TOOLS: "8512546"

stages:
  - publish
  - release

.anchors:
  - &gen-props
      echo ext { >> properties.gradle
      && echo gitlab = [ publishToken:"'$TOKEN'",consumeToken:"'$TOKEN'" ] >> properties.gradle
      && echo deeplink = "'$DEEPLINK'" >> properties.gradle
      && echo server = [ dev :'"\"'$SERVER'\"",stage:"\"'$SERVER'\"",beta:"\"'$SERVER'\"",store:"\"'$SERVER'\""' ] >> properties.gradle
      && echo socket = '"\"'$SOCKET'\""' >> properties.gradle
      && echo } >> properties.gradle

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}_latest.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - mkdir android-sdk-linux/cmdline-tools/latest
  - mv android-sdk-linux/cmdline-tools/bin android-sdk-linux/cmdline-tools/latest/
  - mv android-sdk-linux/cmdline-tools/lib android-sdk-linux/cmdline-tools/latest/
  - mv android-sdk-linux/cmdline-tools/source.properties android-sdk-linux/cmdline-tools/latest/
  - echo y | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/cmdline-tools/latest/bin/sdkmanager --licenses
  - set -o pipefail
  - *gen-props

publishing:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - ./gradlew publish
    - echo "TAG=$(./gradlew currentVersion -q -Prelease.quiet)" >> variables.env
  artifacts:
    reports:
      dotenv: variables.env

releasing:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: publishing
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - echo "Preparing Release"
  script:
    - release-cli create --name "Release v$TAG" --description "$CI_COMMIT_MESSAGE" --tag-name "v$TAG" --ref "$CI_COMMIT_SHA" || echo "Release v$TAG already exists"