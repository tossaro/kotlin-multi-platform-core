default:
  image: openjdk:11

variables:
  GIT_STRATEGY: clone
  # Make sure that you get tags from git repository otherwise the release
  # Gradle plugin will not be able to create the next version number:
  GIT_FETCH_EXTRA_FLAGS: --tags
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - publish
  - release

.anchors:
  - &gen-props
      echo ext { >> properties.gradle
      && echo gitlab = [ publishToken:"'$TOKEN'",consumeToken:"'$TOKEN'" ] >> properties.gradle
      && echo deeplink = [ dev:'"\"'$DEEPLINK'\"",stage:"\"'$DEEPLINK'\"",beta:"\"'$DEEPLINK'\"",store:"\"'$DEEPLINK'\""' ] >> properties.gradle
      && echo server = [ dev :'"\"'$SERVER'\"",stage:"\"'$SERVER'\"",beta:"\"'$SERVER'\"",store:"\"'$SERVER'\""' ] >> properties.gradle
      && echo socket = [ dev :'"\"'$SOCKET'\"",stage:"\"'$SOCKET'\"",beta:"\"'$SOCKET'\"",store:"\"'$SOCKET'\""' ] >> properties.gradle
      && echo } >> properties.gradle

publishing:
  stage: publish
#  rules:
#    - if: $CI_COMMIT_TAG
#      when: never
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - *gen-props
    - cat properties.gradle
  script:
    - ./gradlew publish

releasing:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: publishing
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Releasing $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: $CI_COMMIT_MESSAGE
    tag_name: $CI_COMMIT_TAG
    ref: $CI_COMMIT_SHA
    assets:
      links:
        - name: 'Package'
          url: "https://gitlab.com/tossaro/kotlin-android-core/-/package_files/52132859/download"