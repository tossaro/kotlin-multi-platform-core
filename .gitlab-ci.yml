image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "32"
  ANDROID_BUILD_TOOLS: "32.1.0"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

stages:
  - build
  - test
  - publish
  - release

.anchors:
  - &gen-props
      echo ext { >> properties.gradle
      && echo gitlab = [ publishToken:"'$TOKEN'",consumeToken:"'$TOKEN'" ] >> properties.gradle
      && echo deeplink = [ dev:'"\"'$DEEPLINK'\"",stage:"\"'$DEEPLINK'\"",beta:"\"'$DEEPLINK'\"",store:"\"'$DEEPLINK'\""' ] >> properties.gradle
      && echo server = [ dev :'"\"'$SERVER'\"",stage:"\"'$SERVER'\"",beta:"\"'$SERVER'\"",store:"\"'$SERVER'\""' ] >> properties.gradle
      && echo socket = [ dev :'"\"'$SOCKET'\"",stage:"\"'$SOCKET'\"",beta:"\"'$SOCKET'\"",store:"\"'$SOCKET'\""' ] >> properties.gradle
      && echo } >> properties.gradle

lintDebug:
  stage: build
  script:
    - ./gradlew -Pci --console=plain :app:lintDevDebug -PbuildDir=lint

assembleDebug:
  stage: build
  script:
    - ./gradlew assembleDevDebug
  artifacts:
    paths:
      - app/build/outputs/

debugTests:
  stage: test
  script:
    - ./gradlew -Pci --console=plain :app:testDevDebug

coverageTests:
  stage: test
  script:
    - ./gradlew -Pci --console=plain jacocoTestReport coveralls

publishing:
  stage: publish
#  rules:
#    - if: $CI_COMMIT_TAG
#      when: never
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - *gen-props
    - cat properties.gradle
  script:
    - ./gradlew publish

releasing:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: publishing
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Releasing $CI_COMMIT_TAG"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: $CI_COMMIT_MESSAGE
    tag_name: $CI_COMMIT_TAG
    ref: $CI_COMMIT_SHA
    assets:
      links:
        - name: 'Package'
          url: "https://gitlab.com/tossaro/kotlin-android-core/-/package_files/52132859/download"